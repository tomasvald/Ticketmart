apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'

def AXIS2_DEPLOYMENT = "C:/opt/apache-tomcat-8.5.5/webapps/axis2"

repositories {
	mavenLocal()
	mavenCentral()
}

ext {
	//spring libs
	springVersion = '5.1.2.RELEASE'
	springDataVersion = '2.3.0.RELEASE'
	springAmqpVersion = '2.1.0.RELEASE'
	springSecurityVersion = '5.1.2.RELEASE'
	springBatchVersion = '4.0.0.RELEASE'
	springIntegrationVersion = '5.0.2.BUILD-SNAPSHOT'
	
	//jersey
	jerseyVersion  = '2.30'
	
	//miscellaneous	
	javaxVersion   = '1.3.2'
	jaxrsVersion   = '2.0.1'
	servletVersion = '3.0.1'
	jstlVersion    = '1.2'
	jacksonVersion = '2.12.1'
	springfoxVersion = '2.9.2'

	//logging libs
	log4jVersion   = '1.2.17'
	slf4jVersion   = '1.7.25'
	logbackVersion = '1.2.3'
	
	//databases
	mysqlVersion   = '5.1.47'
	h2Version      = '1.4.194'

	//persistency libraries
	hibernateVersion = '5.2.10.Final'
	hibernateJpaVersion = '1.0.2.Final'
	hibernateValidatorVersion = '5.4.1.Final' //6.0.0.Beta2
	atomikosVersion = '4.0.4'

	//testing libs
	junitVersion = '4.12'

	spring = [
			context           : "org.springframework:spring-context:$springVersion",
			some              : "org.springframework:spring-context-support:$springVersion",
			webmvc            : "org.springframework:spring-webmvc:$springVersion",
			aop               : "org.springframework:spring-aop:$springVersion",
			aspects           : "org.springframework:spring-aspects:$springVersion",
			tx                : "org.springframework:spring-tx:$springVersion",
			jdbc              : "org.springframework:spring-jdbc:$springVersion",
			contextSupport    : "org.springframework:spring-context-support:$springVersion",
			orm               : "org.springframework:spring-orm:$springVersion",
			data              : "org.springframework.data:spring-data-jpa:$springDataVersion",
			test              : "org.springframework:spring-test:$springVersion",
			jms               : "org.springframework:spring-jms:$springVersion",
			oxm               : "org.springframework:spring-oxm:$springVersion",
			securityWeb       : "org.springframework.security:spring-security-web:$springSecurityVersion",
			securityConfig    : "org.springframework.security:spring-security-config:$springSecurityVersion",
			securityTaglibs   : "org.springframework.security:spring-security-taglibs:$springSecurityVersion",
			rabbit            : "org.springframework.amqp:spring-rabbit:$springAmqpVersion",
			springSecurityTest: "org.springframework.security:spring-security-test:$springSecurityVersion",
			webSocket         : "org.springframework:spring-websocket:$springVersion",
			messaging         : "org.springframework:spring-messaging:$springVersion",
			batchCore         : "org.springframework.batch:spring-batch-core:$springBatchVersion",
			batchIntegration  : "org.springframework.batch:spring-batch-integration:$springBatchVersion",
			integrationFile   : "org.springframework.integration:spring-integration-file:$springIntegrationVersion",
			webflux           : "org.springframework:spring-webflux:$springVersion"

	]

	hibernate = [
			validator  : "org.hibernate:hibernate-validator:$hibernateValidatorVersion",
			jpaModelGen: "org.hibernate:hibernate-jpamodelgen:$hibernateVersion",
			ehcache    : "org.hibernate:hibernate-ehcache:$hibernateVersion",
			em         : "org.hibernate:hibernate-entitymanager:$hibernateVersion",
			envers     : "org.hibernate:hibernate-envers:$hibernateVersion",
			jpaApi     : "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:$hibernateJpaVersion",
			querydslapt: "com.mysema.querydsl:querydsl-apt:2.7.1",
			tx         : "com.atomikos:transactions-hibernate4:$atomikosVersion"
	]
	
	jersey = [
			servlet    : "org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion",
    		server     : "org.glassfish.jersey.core:jersey-server:$jerseyVersion",
    		hk2        : "org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion"
	]
	
	testing = [
			junit : "junit:junit:$junitVersion"
	]
	
	misc = [
			javax      : "javax.annotation:javax.annotation-api:$javaxVersion",
			jacksonDb  : "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion" // for JSON HTTP responses
	]


	log = [
			slf4jJcl       : "org.slf4j:jcl-over-slf4j:$slf4jVersion",
			log4j          : "log4j:log4j:$log4jVersion",
			logback        : "ch.qos.logback:logback-classic:$logbackVersion"
	]
	
	db = [
			mysql : "mysql:mysql-connector-java:$mysqlVersion",
			h2    : "com.h2database:h2:$h2Version"
	]
	
	web = [			
			servlet    : "javax.servlet:javax.servlet-api:$servletVersion",
			jstl       : "javax.servlet:jstl:$jstlVersion", // to allow use of JSTL tags in JSP files
			swagger    : "io.springfox:springfox-swagger2:$springfoxVersion",
			swaggerUi  : "io.springfox:springfox-swagger-ui:$springfoxVersion"
	]
}

dependencies {
	compile spring.context, spring.tx, 
			spring.jdbc, spring.orm, 
			hibernate.em, hibernate.jpaApi, 
			spring.data, 
			spring.webmvc, web.servlet,
			jersey.servlet, jersey.server, jersey.hk2, 
			misc.jacksonDb,
			db.mysql, db.h2,
			log.log4j
	testCompile testing.junit
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

compileJava {
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'
}

